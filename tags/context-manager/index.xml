<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>context manager on zamonia500's tech blog</title><link>https://blog.zamonia500.com/tags/context-manager/</link><description>Recent content in context manager on zamonia500's tech blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 02 Apr 2022 15:54:19 +0900</lastBuildDate><atom:link href="https://blog.zamonia500.com/tags/context-manager/index.xml" rel="self" type="application/rss+xml"/><item><title>What Is Context Manager</title><link>https://blog.zamonia500.com/posts/python/what-is-context-manager/</link><pubDate>Sat, 02 Apr 2022 15:54:19 +0900</pubDate><guid>https://blog.zamonia500.com/posts/python/what-is-context-manager/</guid><description>Summary Context manager란? : runtime context를 위한 런타임 환경을 관리해주는 객체 contextmanager decorator : context manager를 구현하기 쉽게 해주는 helper decorator With Statement Context Managers context manager는 with 문이 실행되었을 때, 생성되는 runtime context를 정의하는 객체이다. code block을 실행하는 데 필요한 entry / exit 로직을 담당한다. 보통 with 문으로 실행되지만, method를 직접 호출하여 사용할 수 있다. object.__enter__(self) # Enter the runtime context related to this object. # The with statement will bind this method’s return value # to the target(s) specified in the as clause of the statement, if any.</description></item></channel></rss>