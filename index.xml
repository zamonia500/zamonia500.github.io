<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>zamonia500's tech blog</title><link>https://blog.zamonia500.com/</link><description>Recent content on zamonia500's tech blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Mar 2022 16:35:16 +0900</lastBuildDate><atom:link href="https://blog.zamonia500.com/index.xml" rel="self" type="application/rss+xml"/><item><title>kubectx, kubens 설정하기</title><link>https://blog.zamonia500.com/posts/setting-kubectx-kubens/</link><pubDate>Sun, 13 Mar 2022 16:35:16 +0900</pubDate><guid>https://blog.zamonia500.com/posts/setting-kubectx-kubens/</guid><description>kubectx, kubens란? What are kubectx and kubens
kubectx is a tool to switch between contexts (clusters) on kubectl faster. kubens is a tool to switch between Kubernetes namespaces (and configure them for kubectl) easily.
kubectx : Multi-Kubernetes-Cluster 환경에서 kubectl cli tool이 바라보는 cluster를 쉽게 switch 할 수 있게 해 주는 툴 kubens : Cluster에 존재하는 Multi-Namespaces들 중 default namespace를 쉽게 switch 해 주는 툴 Install kubectx, kubens 공식 가이드에서는 brew를 통해 install 할 경우 자동완성(auto-completion) 설정이 진행된다고 했지만 잘 안되었다.</description></item><item><title>python aiohttp 사용법</title><link>https://blog.zamonia500.com/posts/python-aiohttp/</link><pubDate>Sun, 13 Mar 2022 14:16:29 +0900</pubDate><guid>https://blog.zamonia500.com/posts/python-aiohttp/</guid><description>aiohttp란? aiohttp는 &amp;ldquo;Async HTTP client/server for asyncio and Python&amp;quot;이다.
블로킹 콜(blocking-call)이 일어나는 request와는 다르게, aiohttp를 사용하면 싱글 스레드 환경에서 코루틴을 활용한 병렬 처리를 할 수 있다.
aiohttp는 client / server를 위한 기능이 모두 있지만, 나는 client 기능만을 사용하였다.
aiohttp 사용해서 KFP(Kubeflow Pipeline) API 호출하기 KFP SDK가 있긴 하다 kfp(Kubeflow Pipeline) SDK는 자동 생성되는 녀석이라 사용성이 너무 좋지 않았다. 사용하고자 하는 kfp의 upload_pipeline, upload_pipeline_version 함수를 사용하고자 했는데, 이 함수들의 시그니쳐는 다음과 같다.</description></item><item><title>Github blog에 도메인 붙이기</title><link>https://blog.zamonia500.com/posts/register-custom-domain-at-github/</link><pubDate>Mon, 31 Jan 2022 19:52:38 +0900</pubDate><guid>https://blog.zamonia500.com/posts/register-custom-domain-at-github/</guid><description>도메인을 하나만 사 두면 서브도메인을 붙여가면서 활용할 수 있을 것 같아서 사 보았다.
GeekNews에서 발견한 도메인 Porkbun에서 구매하였다.
zamonia500.com이라는 도메인을 구입한 뒤, blog서브도메인을 사용하여 내 기술블로그에 대한 도메인으로 삼기로 했다.
porkbun에서 도메인을 구입하는 과정에 대한 설명은 생략하고 구입 이후에 진행해야 하는 두 가지 과정에 대해서 설명하겠다.
설명하는 매뉴얼 내용과 사진은 docs.github.com를 참고했다.
site repository -&amp;gt; Settings -&amp;gt; Pages로 이동 내 도메인 등록 &amp;amp; 저장 Porkbun에 blog.</description></item><item><title>Official docs 만 참고해서 hugo github blog 세팅하기</title><link>https://blog.zamonia500.com/posts/setting-github-blog-with-hugo/</link><pubDate>Thu, 13 Jan 2022 21:03:58 +0900</pubDate><guid>https://blog.zamonia500.com/posts/setting-github-blog-with-hugo/</guid><description>한글 자료를 보고 따라했더니 뻑나서 삽질하다가 작성하는 문서. hugo &amp;amp; github official docs 만 참고해서 github blog를 hugo를 사용하도록 세팅했다. 수행해야 하는 작업의 목록은 꽤나 많아 보이지만 사실 별거 없다. 쭉쭉 따라하면 20분 컷 가능하다. 실수를 적게 할 수 있는 방향으로 작업의 순서와 일부 명령어를 편집하였다.
Install Hugo Official doc : Quick Start를 참고했다.
# hugo 설치 brew install hugo # hugo 설치 확인 hugo version 나는 hugo v0.</description></item></channel></rss>